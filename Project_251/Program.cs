namespace Project_251
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // int age = 24;
            // Ваш возраст: 24

            /*Console.WriteLine($"Ваш возраст: {age}");
            Console.WriteLine($"Ваш возраст: {age}");
            Console.WriteLine($"Ваш возраст: {age}");
            Console.WriteLine($"Ваш возраст: {age}");*/

            // int age = int.Parse(Console.ReadLine());
            // int age = Convert.ToInt32(Console.ReadLine()); - Более старый способ
            // Console.WriteLine($"Ваш возраст: {age}");

            // string name = Console.ReadLine();

            // char symbol = char.Parse(Console.ReadLine());

            // int - целое число
            // double - дробное число
            // string - строка
            // char - символ

            // int
            // int age = 24.5; // Ошибка компиляции, так как 24.5 не является целым числом
            // int age = 24; // Правильно, так как 24 является целым числом
            // int - Данный тип, который хранит целые числа от -2 147 483 648 до 2 147 483 647
            // int - Занимает 4 байта в памяти компьютера
            int number = 1147483647; // Правильно, так как -3147483647 является целым числом в пределах диапазона int
            // number = 4294967295; // Ошибка компиляции, так как 4294967295 выходит за пределы диапазона int

            // byte - Беззнаковый целочисленный тип, который хранит целые числа от 0 до 255
            // byte - Занимает 1 байт в памяти компьютера
            // sbyte - Целочисленный тип, который хранит целые числа от -128 до 127
            // sbyte - Занимает 1 байт в памяти компьютера
            // uint - Беззнаковый целочисленный тип, который хранит целые числа от 0 до 4 294 967 295
            // uint - Занимает 4 байта в памяти компьютера
            // short - Целочисленный тип, который хранит целые числа от -32 768 до 32 767
            // short - Занимает 2 байта в памяти компьютера
            // ushort - Беззнаковый целочисленный тип, который хранит целые числа от 0 до 65 535
            // ushort - Занимает 2 байта в памяти компьютера
            // long - Целочисленный тип, который хранит целые числа от -9 223 372 036 854 775 808 до 9 223 372 036 854 775 807
            // long - Занимает 8 байт в памяти компьютера
            // ulong - Беззнаковый целочисленный тип, который хранит целые числа от 0 до 18 446 744 073 709 551 615
            // ulong - Занимает 8 байт в памяти компьютера

            // double - Дробный тип, который хранит числа с плавающей запятой двойной точности
            // double - Занимает 8 байт в памяти компьютера
            // double - До 15-17 цифр после запятой
            double pi = 3.14159265358979323846; // Правильно, так как 3.14159265358979323846 является дробным числом

            // float - Дробный тип, который хранит числа с плавающей запятой одинарной точности
            // float - Занимает 4 байта в памяти компьютера
            // float - До 6-9 цифр после запятой
            float height = 1.75f; // Правильно, так как 1.75f является дробным числом с плавающей запятой одинарной точности

            // decimal - Дробный тип, который хранит числа с фиксированной запятой
            // decimal - Занимает 16 байт в памяти компьютера
            // decimal - До 28-29 цифр после запятой
            decimal price = 19.99m; // Правильно, так как 19.99m является дробным числом с фиксированной запятой

            // char - Символьный тип, который хранит один символ
            char letter = 'A'; // Правильно, так как 'A' является символом
            // char - Занимает 2 байта в памяти компьютера, так как хранит символы в кодировке UTF-16

            // string - Строковый тип, который хранит последовательность символов
            string name = "John Doe"; // Правильно, так как "John Doe" является строкой
            // string - Занимает переменное количество байт в памяти компьютера, в зависимости от длины строки

            /*char symbol;
            Console.WriteLine(symbol);*/ // Ошибка компиляции, так как переменная symbol не инициализирована

            /*string text;
            Console.WriteLine(text);*/ // Ошибка компиляции, так как переменная text не инициализирована

            /*int age;
            Console.WriteLine(age);*/ // Ошибка компиляции, так как переменная age не инициализирована

            // Перед тем как использовать переменную, нужно ее инициализировать !!!

            Console.WriteLine($"Имя: {name}");
        }
    }
}
